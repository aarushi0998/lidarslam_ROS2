[0.000000] (-) TimerEvent: {}
[0.000090] (lio_sam) JobQueued: {'identifier': 'lio_sam', 'dependencies': OrderedDict()}
[0.000127] (lio_sam) JobStarted: {'identifier': 'lio_sam'}
[0.005866] (lio_sam) JobProgress: {'identifier': 'lio_sam', 'progress': 'cmake'}
[0.006670] (lio_sam) JobProgress: {'identifier': 'lio_sam', 'progress': 'build'}
[0.006719] (lio_sam) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/aria/lidarslam_ws/src/LIO-SAM/build/lio_sam', '--', '-j32', '-l32'], 'cwd': '/home/aria/lidarslam_ws/src/LIO-SAM/build/lio_sam', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'aria'), ('GIO_MODULE_DIR', '/home/aria/snap/code/common/.cache/gio-modules'), ('ROS_PACKAGE_PATH', '/home/aria/lidarslam_ws/install/lio_sam_mid360/share'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/snap/code/164/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('GTK_EXE_PREFIX_VSCODE_SNAP_ORIG', ''), ('GDK_BACKEND_VSCODE_SNAP_ORIG', ''), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/aria/lidarslam_ws/install/scanmatcher/lib:/home/aria/lidarslam_ws/install/graph_based_slam/lib:/home/aria/lidarslam_ws/install/livox_sdk2/lib:/home/aria/lidarslam_ws/install/livox_ros_driver2/lib:/home/aria/lidarslam_ws/install/lio_sam/lib:/home/aria/lidarslam_ws/install/lidarslam_msgs/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/aria'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('LOCPATH_VSCODE_SNAP_ORIG', ''), ('TERM_PROGRAM_VERSION', '1.91.1'), ('DESKTOP_SESSION', 'ubuntu'), ('GTK_PATH', '/snap/code/164/usr/lib/x86_64-linux-gnu/gtk-3.0'), ('GTK_IM_MODULE_FILE', '/home/aria/snap/code/common/.cache/immodules/immodules.cache'), ('GIO_LAUNCHED_DESKTOP_FILE', '/var/lib/snapd/desktop/applications/code_code.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('GSETTINGS_SCHEMA_DIR_VSCODE_SNAP_ORIG', ''), ('VSCODE_GIT_ASKPASS_MAIN', '/snap/code/164/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/snap/code/164/usr/share/code/code'), ('MANAGERPID', '2057'), ('SYSTEMD_EXEC_PID', '2427'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '6203'), ('COLCON_PREFIX_PATH', '/home/aria/lidarslam_ws/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'aria'), ('JOURNAL_STREAM', '8:55832'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_CONFIG_DIRS_VSCODE_SNAP_ORIG', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('PKG_CONFIG_PATH', '/home/aria/lidarslam_ws/install/lio_sam_mid360/lib/x86_64-linux-gnu/pkgconfig:/home/aria/lidarslam_ws/install/lio_sam_mid360/lib/pkgconfig'), ('XDG_SESSION_CLASS', 'user'), ('XDG_DATA_DIRS_VSCODE_SNAP_ORIG', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('USERNAME', 'aria'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/home/aria/.local/bin:/home/aria/lidarslam_ws/install/ndt_omp_ros2/bin:/opt/ros/humble/bin:/home/aria/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/ariadesktop3:@/tmp/.ICE-unix/2405,unix/ariadesktop3:/tmp/.ICE-unix/2405'), ('GTK_EXE_PREFIX', '/snap/code/164/usr'), ('INVOCATION_ID', 'accfdcc4378d43258eac15657221ccad'), ('XDG_MENU_PREFIX', 'gnome-'), ('BAMF_DESKTOP_FILE_HINT', '/var/lib/snapd/desktop/applications/code_code.desktop'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':1'), ('LOCPATH', '/snap/code/164/usr/lib/locale'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('GIO_MODULE_DIR_VSCODE_SNAP_ORIG', ''), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-6895516336.sock'), ('TERM_PROGRAM', 'vscode'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('GSETTINGS_SCHEMA_DIR', '/home/aria/snap/code/164/.local/share/glib-2.0/schemas'), ('AMENT_PREFIX_PATH', '/home/aria/lidarslam_ws/install/scanmatcher:/home/aria/lidarslam_ws/install/practice_package:/home/aria/lidarslam_ws/install/graph_based_slam:/home/aria/lidarslam_ws/install/ndt_omp_ros2:/home/aria/lidarslam_ws/install/my_robot_control:/home/aria/lidarslam_ws/install/my_livox_publisher:/home/aria/lidarslam_ws/install/livox_ros_driver2:/home/aria/lidarslam_ws/install/lio_sam:/home/aria/lidarslam_ws/install/lidarslam_msgs:/opt/ros/humble'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GTK_PATH_VSCODE_SNAP_ORIG', ''), ('GTK_IM_MODULE_FILE_VSCODE_SNAP_ORIG', ''), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/aria/lidarslam_ws/src/LIO-SAM/build/lio_sam'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/home/aria/snap/code/164/.local/share:/home/aria/snap/code/164:/snap/code/164/usr/share:/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/aria/lidarslam_ws/install/livox_ros_driver2/local/lib/python3.10/dist-packages:/home/aria/lidarslam_ws/install/lio_sam/local/lib/python3.10/dist-packages:/home/aria/lidarslam_ws/install/lidarslam_msgs/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/aria/lidarslam_ws/install/scanmatcher:/home/aria/lidarslam_ws/install/practice_package:/home/aria/lidarslam_ws/install/graph_based_slam:/home/aria/lidarslam_ws/install/ndt_omp_ros2:/home/aria/lidarslam_ws/install/my_robot_control:/home/aria/lidarslam_ws/install/my_livox_publisher:/home/aria/lidarslam_ws/install/livox_ros_driver2:/opt/ros/humble:/home/aria/lidarslam_ws/install/lio_sam:/home/aria/lidarslam_ws/install/lidarslam_msgs')]), 'shell': False}
[0.049901] (lio_sam) StdoutLine: {'line': b'[  4%] Built target lio_sam__cpp\n'}
[0.050068] (lio_sam) StdoutLine: {'line': b'[ 10%] Built target lio_sam__rosidl_generator_c\n'}
[0.058557] (lio_sam) StdoutLine: {'line': b'[ 10%] Built target ament_cmake_python_copy_lio_sam\n'}
[0.065775] (lio_sam) StdoutLine: {'line': b'[ 27%] Built target lio_sam__rosidl_typesupport_c\n'}
[0.065947] (lio_sam) StdoutLine: {'line': b'[ 27%] Built target lio_sam__rosidl_typesupport_introspection_c\n'}
[0.066138] (lio_sam) StdoutLine: {'line': b'[ 46%] Built target lio_sam__rosidl_typesupport_fastrtps_cpp\n'}
[0.066215] (lio_sam) StdoutLine: {'line': b'[ 48%] Built target lio_sam__rosidl_typesupport_fastrtps_c\n'}
[0.066275] (lio_sam) StdoutLine: {'line': b'[ 53%] Built target lio_sam__rosidl_typesupport_introspection_cpp\n'}
[0.073861] (lio_sam) StdoutLine: {'line': b'[ 61%] Built target lio_sam__rosidl_typesupport_cpp\n'}
[0.086500] (lio_sam) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target lio_sam_featureExtraction\x1b[0m\n'}
[0.086665] (lio_sam) StdoutLine: {'line': b'[ 61%] Built target lio_sam\n'}
[0.086936] (lio_sam) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target lio_sam_imageProjection\x1b[0m\n'}
[0.088071] (lio_sam) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target lio_sam_imuPreintegration\x1b[0m\n'}
[0.088482] (lio_sam) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target lio_sam_mapOptimization\x1b[0m\n'}
[0.099485] (-) TimerEvent: {}
[0.100272] (lio_sam) StdoutLine: {'line': b'[ 63%] Built target lio_sam__py\n'}
[0.114490] (lio_sam) StdoutLine: {'line': b'[ 68%] Built target lio_sam_featureExtraction\n'}
[0.115154] (lio_sam) StdoutLine: {'line': b'[ 74%] Built target lio_sam__rosidl_generator_py\n'}
[0.116617] (lio_sam) StdoutLine: {'line': b'[ 76%] \x1b[32mBuilding CXX object CMakeFiles/lio_sam_imageProjection.dir/src/imageProjection.cpp.o\x1b[0m\n'}
[0.118401] (lio_sam) StdoutLine: {'line': b'[ 80%] Built target lio_sam_imuPreintegration\n'}
[0.121462] (lio_sam) StdoutLine: {'line': b'[ 85%] Built target lio_sam_mapOptimization\n'}
[0.130039] (lio_sam) StdoutLine: {'line': b'[ 91%] Built target lio_sam__rosidl_typesupport_introspection_c__pyext\n'}
[0.130217] (lio_sam) StdoutLine: {'line': b'[ 95%] Built target lio_sam__rosidl_typesupport_c__pyext\n'}
[0.130275] (lio_sam) StdoutLine: {'line': b'[ 97%] Built target lio_sam__rosidl_typesupport_fastrtps_c__pyext\n'}
[0.199653] (-) TimerEvent: {}
[0.203993] (lio_sam) StdoutLine: {'line': b'running egg_info\n'}
[0.204519] (lio_sam) StdoutLine: {'line': b'writing lio_sam.egg-info/PKG-INFO\n'}
[0.204679] (lio_sam) StdoutLine: {'line': b'writing dependency_links to lio_sam.egg-info/dependency_links.txt\n'}
[0.204741] (lio_sam) StdoutLine: {'line': b'writing top-level names to lio_sam.egg-info/top_level.txt\n'}
[0.205973] (lio_sam) StdoutLine: {'line': b"reading manifest file 'lio_sam.egg-info/SOURCES.txt'\n"}
[0.206249] (lio_sam) StdoutLine: {'line': b"writing manifest file 'lio_sam.egg-info/SOURCES.txt'\n"}
[0.223068] (lio_sam) StdoutLine: {'line': b'[ 97%] Built target ament_cmake_python_build_lio_sam_egg\n'}
[0.299893] (-) TimerEvent: {}
[0.400267] (-) TimerEvent: {}
[0.500572] (-) TimerEvent: {}
[0.600944] (-) TimerEvent: {}
[0.701297] (-) TimerEvent: {}
[0.801666] (-) TimerEvent: {}
[0.902071] (-) TimerEvent: {}
[1.002447] (-) TimerEvent: {}
[1.102859] (-) TimerEvent: {}
[1.203260] (-) TimerEvent: {}
[1.303538] (-) TimerEvent: {}
[1.403819] (-) TimerEvent: {}
[1.504224] (-) TimerEvent: {}
[1.604615] (-) TimerEvent: {}
[1.705037] (-) TimerEvent: {}
[1.805448] (-) TimerEvent: {}
[1.905885] (-) TimerEvent: {}
[2.006317] (-) TimerEvent: {}
[2.106738] (-) TimerEvent: {}
[2.207160] (-) TimerEvent: {}
[2.307575] (-) TimerEvent: {}
[2.407888] (-) TimerEvent: {}
[2.508392] (-) TimerEvent: {}
[2.608823] (-) TimerEvent: {}
[2.709238] (-) TimerEvent: {}
[2.809622] (-) TimerEvent: {}
[2.910059] (-) TimerEvent: {}
[3.010385] (-) TimerEvent: {}
[3.110716] (-) TimerEvent: {}
[3.211110] (-) TimerEvent: {}
[3.311422] (-) TimerEvent: {}
[3.411850] (-) TimerEvent: {}
[3.512293] (-) TimerEvent: {}
[3.612722] (-) TimerEvent: {}
[3.713110] (-) TimerEvent: {}
[3.813551] (-) TimerEvent: {}
[3.913982] (-) TimerEvent: {}
[4.014392] (-) TimerEvent: {}
[4.114837] (-) TimerEvent: {}
[4.215267] (-) TimerEvent: {}
[4.315567] (-) TimerEvent: {}
[4.415869] (-) TimerEvent: {}
[4.516448] (-) TimerEvent: {}
[4.617026] (-) TimerEvent: {}
[4.717437] (-) TimerEvent: {}
[4.817772] (-) TimerEvent: {}
[4.918202] (-) TimerEvent: {}
[5.018601] (-) TimerEvent: {}
[5.118986] (-) TimerEvent: {}
[5.219360] (-) TimerEvent: {}
[5.319637] (-) TimerEvent: {}
[5.419917] (-) TimerEvent: {}
[5.520344] (-) TimerEvent: {}
[5.620622] (-) TimerEvent: {}
[5.721038] (-) TimerEvent: {}
[5.821438] (-) TimerEvent: {}
[5.921861] (-) TimerEvent: {}
[6.022285] (-) TimerEvent: {}
[6.122698] (-) TimerEvent: {}
[6.223047] (-) TimerEvent: {}
[6.323355] (-) TimerEvent: {}
[6.423597] (-) TimerEvent: {}
[6.523827] (-) TimerEvent: {}
[6.624124] (-) TimerEvent: {}
[6.724492] (-) TimerEvent: {}
[6.824881] (-) TimerEvent: {}
[6.925268] (-) TimerEvent: {}
[7.025668] (-) TimerEvent: {}
[7.126083] (-) TimerEvent: {}
[7.169234] (lio_sam) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[7.169467] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[7.169530] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[7.169588] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.169643] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.169950] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.170148] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.170343] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.170407] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.170464] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.170519] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/aria/lidarslam_ws/src/LIO-SAM/include/lio_sam/utility.hpp:6\x1b[m\x1b[K,\n'}
[7.170573] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/aria/lidarslam_ws/src/LIO-SAM/src/imageProjection.cpp:1\x1b[m\x1b[K:\n'}
[7.170627] (lio_sam) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.170692] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = livox_ros_driver2::CustomMsg_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.170759] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = livox_ros_driver2::CustomMsg_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.170823] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.170881] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.170948] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aria/lidarslam_ws/src/LIO-SAM/src/imageProjection.cpp:155:74:\x1b[m\x1b[K   required from here\n'}
[7.171005] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[7.171083] (lio_sam) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[7.171140] (lio_sam) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.171213] (lio_sam) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[7.171272] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[7.171324] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[7.171377] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.171430] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.171483] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.171535] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.171587] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.171640] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.171692] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.171747] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/aria/lidarslam_ws/src/LIO-SAM/include/lio_sam/utility.hpp:6\x1b[m\x1b[K,\n'}
[7.171799] (lio_sam) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/aria/lidarslam_ws/src/LIO-SAM/src/imageProjection.cpp:1\x1b[m\x1b[K:\n'}
[7.171851] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.171925] (lio_sam) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[7.171978] (lio_sam) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.172030] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.172083] (lio_sam) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.172152] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.172455] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.172512] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = livox_ros_driver2::CustomMsg_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.172575] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = livox_ros_driver2::CustomMsg_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.172635] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.172694] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.172756] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aria/lidarslam_ws/src/LIO-SAM/src/imageProjection.cpp:155:74:\x1b[m\x1b[K   required from here\n'}
[7.172809] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.172863] (lio_sam) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[7.172915] (lio_sam) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.172967] (lio_sam) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.173024] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = livox_ros_driver2::CustomMsg_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.173080] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = livox_ros_driver2::CustomMsg_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.173143] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.173202] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = livox_ros_driver2::CustomMsg_<std::allocator<void> >; CallbackT = std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<livox_ros_driver2::CustomMsg_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.173260] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/home/aria/lidarslam_ws/src/LIO-SAM/src/imageProjection.cpp:155:74:\x1b[m\x1b[K   required from here\n'}
[7.173312] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.173378] (lio_sam) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[7.173435] (lio_sam) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.173487] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.173555] (lio_sam) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[7.173611] (lio_sam) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.173663] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.173729] (lio_sam) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[7.173782] (lio_sam) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.173834] (lio_sam) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::_Bind<void (ImageProjection::*(ImageProjection*, std::_Placeholder<1>))(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(const std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&)>, std::function<void(const livox_ros_driver2::CustomMsg_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> >, std::default_delete<livox_ros_driver2::CustomMsg_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const livox_ros_driver2::CustomMsg_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<livox_ros_driver2::CustomMsg_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.173901] (lio_sam) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[7.173956] (lio_sam) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.226310] (-) TimerEvent: {}
[7.326686] (-) TimerEvent: {}
[7.427131] (-) TimerEvent: {}
[7.527412] (-) TimerEvent: {}
[7.627695] (-) TimerEvent: {}
[7.728098] (-) TimerEvent: {}
[7.828496] (-) TimerEvent: {}
[7.928915] (-) TimerEvent: {}
[8.029329] (-) TimerEvent: {}
[8.129750] (-) TimerEvent: {}
[8.230139] (-) TimerEvent: {}
[8.330532] (-) TimerEvent: {}
[8.430941] (-) TimerEvent: {}
[8.531341] (-) TimerEvent: {}
[8.631614] (-) TimerEvent: {}
[8.732036] (-) TimerEvent: {}
[8.832446] (-) TimerEvent: {}
[8.932846] (-) TimerEvent: {}
[9.033244] (-) TimerEvent: {}
[9.133651] (-) TimerEvent: {}
[9.234066] (-) TimerEvent: {}
[9.334477] (-) TimerEvent: {}
[9.434865] (-) TimerEvent: {}
[9.535303] (-) TimerEvent: {}
[9.635714] (-) TimerEvent: {}
[9.736102] (-) TimerEvent: {}
[9.836471] (-) TimerEvent: {}
[9.936893] (-) TimerEvent: {}
[10.037288] (-) TimerEvent: {}
[10.137709] (-) TimerEvent: {}
[10.238134] (-) TimerEvent: {}
[10.338570] (-) TimerEvent: {}
[10.438991] (-) TimerEvent: {}
[10.539379] (-) TimerEvent: {}
[10.639809] (-) TimerEvent: {}
[10.740221] (-) TimerEvent: {}
[10.840613] (-) TimerEvent: {}
[10.941028] (-) TimerEvent: {}
[11.041468] (-) TimerEvent: {}
[11.141885] (-) TimerEvent: {}
[11.242259] (lio_sam) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/lio_sam_imageProjection.dir/build.make:76: CMakeFiles/lio_sam_imageProjection.dir/src/imageProjection.cpp.o] Error 1\n'}
[11.242457] (-) TimerEvent: {}
[11.242683] (lio_sam) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:626: CMakeFiles/lio_sam_imageProjection.dir/all] Error 2\n'}
[11.242882] (lio_sam) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[11.244821] (lio_sam) CommandEnded: {'returncode': 2}
[11.342608] (-) TimerEvent: {}
[11.360146] (lio_sam) JobEnded: {'identifier': 'lio_sam', 'rc': 2}
[11.370848] (-) EventReactorShutdown: {}
